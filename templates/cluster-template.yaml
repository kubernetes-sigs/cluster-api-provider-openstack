apiVersion: v1
data:
  cacert: ${OPENSTACK_CLOUD_CACERT_B64}
  clouds.yaml: ${OPENSTACK_CLOUD_YAML_B64}
kind: Secret
metadata:
  labels:
    clusterctl.cluster.x-k8s.io/move: "true"
  name: ${CLUSTER_NAME}-cloud-config
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
spec:
  template:
    spec:
      files: []
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-provider: external
            provider-id: openstack:///'{{ instance_id }}'
          name: '{{ local_hostname }}'
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: ${CLUSTER_NAME}
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
      - 192.168.0.0/16
    serviceDomain: cluster.local
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KubeadmControlPlane
    name: ${CLUSTER_NAME}-control-plane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha7
    kind: OpenStackCluster
    name: ${CLUSTER_NAME}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: ${CLUSTER_NAME}-md-0
spec:
  clusterName: ${CLUSTER_NAME}
  replicas: ${WORKER_MACHINE_COUNT}
  selector:
    matchLabels: null
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          name: ${CLUSTER_NAME}-md-0
      clusterName: ${CLUSTER_NAME}
      failureDomain: ${OPENSTACK_FAILURE_DOMAIN}
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha7
        kind: OpenStackMachineTemplate
        name: ${CLUSTER_NAME}-md-0
      version: ${KUBERNETES_VERSION}
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  name: ${CLUSTER_NAME}-control-plane
spec:
  kubeadmConfigSpec:
    clusterConfiguration:
      apiServer:
        extraArgs:
          cloud-provider: external
      controllerManager:
        extraArgs:
          cloud-provider: external
    files: []
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
          provider-id: openstack:///'{{ instance_id }}'
        name: '{{ local_hostname }}'
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
          provider-id: openstack:///'{{ instance_id }}'
        name: '{{ local_hostname }}'
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1alpha7
      kind: OpenStackMachineTemplate
      name: ${CLUSTER_NAME}-control-plane
  replicas: ${CONTROL_PLANE_MACHINE_COUNT}
  version: ${KUBERNETES_VERSION}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha7
kind: OpenStackCluster
metadata:
  name: ${CLUSTER_NAME}
spec:
  apiServerLoadBalancer:
    enabled: true
  cloudName: ${OPENSTACK_CLOUD}
  dnsNameservers:
  - ${OPENSTACK_DNS_NAMESERVERS}
  externalNetworkId: ${OPENSTACK_EXTERNAL_NETWORK_ID}
  identityRef:
    kind: Secret
    name: ${CLUSTER_NAME}-cloud-config
  securityGroups:
    controlPlaneSecurityGroupRules:
    - direction: egress
      description: Allow all egress traffic for IPv4
      etherType: IPv4
      portRangeMin: 0
      portRangeMax: 0
      protocol: ""
      remoteIpPrefix: ""
    - direction: ingress
      description: Allow all in-cluster ingress traffic for IPv4
      etherType: IPv4
      portRangeMin: 0
      portRangeMax: 0
      protocol: ""
      remoteIpPrefix: self
    - direction: ingress
      description: Allow all in-cluster ingress traffic for IPv4
      etherType: IPv4
      portRangeMin: 0
      portRangeMax: 0
      protocol: ""
      remoteIpPrefix: k8s-cluster-${CLUSTER_NAME}-secgroup-worker
    - direction: ingress
      description: Allow etcd traffic
      portRangeMin: 2379
      portRangeMax: 2380
      protocol: tcp
      remoteGroupID: self
    - direction: ingress
      description: Allow Kubelet API traffic
      portRangeMin: 10250
      portRangeMax: 10250
      protocol: tcp
      remoteGroupID: self
    - direction: ingress
      description: Allow Kubelet API traffic
      portRangeMin: 10250
      portRangeMax: 10250
      protocol: tcp
      remoteGroupID: k8s-cluster-${CLUSTER_NAME}-secgroup-controlplane
    - direction: ingress
      description: Allow SSH traffic
      portRangeMin: 22
      portRangeMax: 22
      protocol: tcp
    - direction: ingress
      description: Allow Kubernetes API traffic
      EtherType: IPv4
      portRangeMin: 6443
      portRangeMax: 6443
      protocol: tcp
    workerSecurityGroupRules:
    - direction: egress
      description: Allow all egress traffic for IPv4
      etherType: IPv4
      portRangeMin: 0
      portRangeMax: 0
      protocol: ""
      remoteIpPrefix: ""
    - direction: ingress
      description: Allow node port services traffic for IPv4 tcp
      etherType: IPv4
      portRangeMin: 30000
      portRangeMax: 32767
      protocol: tcp
    - direction: ingress
      description: Allow node port services traffic for IPv4 udp
      etherType: IPv4
      portRangeMin: 30000
      portRangeMax: 32767
      protocol: udp
    - direction: ingress
      description: Allow all in-cluster ingress traffic for IPv4
      etherType: IPv4
      portRangeMin: 0
      portRangeMax: 0
      protocol: ""
      remoteIpPrefix: self
    - direction: ingress
      description: Allow all in-cluster ingress traffic for IPv4
      etherType: IPv4
      portRangeMin: 0
      portRangeMax: 0
      protocol: ""
      remoteIpPrefix: k8s-cluster-${CLUSTER_NAME}-secgroup-controlplane
    - direction: ingress
      description: Allow Kubelet API traffic
      portRangeMin: 10250
      portRangeMax: 10250
      protocol: tcp
      remoteGroupID: self
    - direction: ingress
      description: Allow SSH traffic
      portRangeMin: 22
      portRangeMax: 22
      protocol: tcp
  nodeCidr: 10.6.0.0/24
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha7
kind: OpenStackMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-control-plane
spec:
  template:
    spec:
      cloudName: ${OPENSTACK_CLOUD}
      flavor: ${OPENSTACK_CONTROL_PLANE_MACHINE_FLAVOR}
      identityRef:
        kind: Secret
        name: ${CLUSTER_NAME}-cloud-config
      image: ${OPENSTACK_IMAGE_NAME}
      sshKeyName: ${OPENSTACK_SSH_KEY_NAME}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha7
kind: OpenStackMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
spec:
  template:
    spec:
      cloudName: ${OPENSTACK_CLOUD}
      flavor: ${OPENSTACK_NODE_MACHINE_FLAVOR}
      identityRef:
        kind: Secret
        name: ${CLUSTER_NAME}-cloud-config
      image: ${OPENSTACK_IMAGE_NAME}
      sshKeyName: ${OPENSTACK_SSH_KEY_NAME}
